@model AgentRegistrationModel
<form class="p-5" method="post" asp-action="RegisterAgent" asp-controller="Auth" enctype="multipart/form-data">
    <div asp-validation-summary="All" class="text-danger" role="alert"></div>
    <input  asp-for="@Model.Id" hidden/>
    <div class="form-floating mb-3">
        <input asp-for="@Model.FirstName" class="form-control" aria-required="true" readonly/>
        <label asp-for="@Model.FirstName" class="form-label">First name</label>
        <span asp-validation-for="@Model.FirstName" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.LastName" class="form-control" aria-required="true" readonly/>
        <label asp-for="@Model.LastName" class="form-label">Last name</label>
        <span asp-validation-for="@Model.LastName" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.PhoneNumber" class="form-control" aria-required="true" />
        <label asp-for="@Model.PhoneNumber" class="form-label">Phone Number</label>
        <span asp-validation-for="@Model.PhoneNumber" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.StoreName" class="form-control" aria-required="true" />
        <label asp-for="@Model.StoreName" class="form-label">Store name</label>
        <span asp-validation-for="@Model.StoreName" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.Slug" class="form-control" aria-required="true" id="slugInput" value="@(Model.Id != null ? Model.Slug : ViewBag.UserId)" />
        <label asp-for="@Model.Slug" class="form-label">Slug</label>
        <span id="slugDisplay" class="mt-3"></span>
        <span asp-validation-for="@Model.Slug" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        @if(Model.Id != null)
        {
            <input class="form-control" id="autocomplete-input" value="@Model.StoreAddress"/>
        }
        else
        {
            <input class="form-control" id="autocomplete-input" />
        }
        <label asp-for="@Model.StoreAddress" class="form-label">Store Address</label>
        <input asp-for="@Model.StoreAddress" class="store-address" hidden />
        <input asp-for="@Model.Latitude" class="latitude" hidden />
        <input asp-for="@Model.Longitude" class="longitude" hidden />
        <input asp-for="@Model.State" class="state" hidden />
        <input asp-for="@Model.Country" class="country" hidden />
        <span asp-validation-for="@Model.StoreAddress" class="text-danger"></span>
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.Logo" class="form-control" aria-required="true" type="file" accept="image/*" name="logo" />
        <label asp-for="@Model.Logo" class="form-label">Store Logo</label>
        <span asp-validation-for="@Model.Logo" class="text-danger"></span>
        @if (Model.Id != null)
        {
            string logo = $"~/images/agent/{Model.Id}/registration/Logo.Png";
            <img src="@Url.Content(logo)" alt="logo" width="100" height="100" />
        }
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.ProfilePicture" class="form-control" aria-required="true" type="file" accept="image/*" name="profilePicture" />
        <label asp-for="@Model.ProfilePicture" class="form-label">Profile Picture</label>
        <span asp-validation-for="@Model.ProfilePicture" class="text-danger"></span>
        @if (Model.Id != null)
        {
            string PP = $"~/images/agent/{Model.Id}/registration/ProfilePicture.Png";
            <img src="@Url.Content(PP)" alt="logo" width="100" height="100" />
        }
    </div>
    <div class="form-floating mb-3">
        <input asp-for="@Model.NationalCard" class="form-control" aria-required="true" type="file" accept="image/*" name="nationalCard" />
        <label asp-for="@Model.NationalCard" class="form-label">National Card</label>
        <span asp-validation-for="@Model.NationalCard" class="text-danger"></span>
        @if (Model.Id != null)
        {
            string NC = $"~/images/agent/{Model.Id}/registration/NationalCard.Png";
            <img src="@Url.Content(NC)" alt="logo" width="100" height="100" />
        }
    </div>
    <div class="checkbox mb-3">
        <label asp-for="@Model.Privacy" class="form-label">
            <input class="form-check-input" asp-for="@Model.Privacy" />
            <p class="d-inline-block">
                I have read and agree to the <a href="">Terms and Conditions</a> and <a href="">Privacy Policy</a>
            </p>
        </label>
        <span asp-validation-for="@Model.Privacy" class="text-danger"></span>
    </div>
   @if(Model.Id != null)
    {
        <button type="submit" class="btn btn-primary">Update</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary">Submit for verification</button>
    }
</form>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCSk8XumgpnSn3AcgoPqQm_zZwrq8Ll6UY&libraries=places"></script>
    <script>
        function initMap() {
            document.addEventListener('DOMContentLoaded', function () {
                const slugInput = document.getElementById('slugInput');
                const slugDisplay = document.getElementById('slugDisplay');
                slugDisplay.textContent = "https://www.rentwise.com/store/" + slugInput.value;

                slugInput.addEventListener('input', function () {
                    slugDisplay.textContent = "https://www.rentwise.com/store/" + slugInput.value;
                });
            });

            // Initialize the Places Autocomplete
            const autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete-input'));

            // Set the types to restrict the search to addresses only
            autocomplete.setTypes(['address']);

            // Listen for the event when a place is selected
            autocomplete.addListener('place_changed', function () {
                console.log(1);
                const place = autocomplete.getPlace();
                $('.store-address').val(place.formatted_address);
                if (place.geometry && place.geometry.location) {
                    const latitude = place.geometry.location.lat();
                    const longitude = place.geometry.location.lng();
                    $('.latitude').val(latitude);
                    $('.longitude').val(longitude);

                    // Construct the request URL for reverse geocoding
                    const geocodingApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + latitude + ',' + longitude + '&key=YOUR_API_KEY';

                    // Make a request to the Geocoding API
                    fetch(geocodingApiUrl)
                        .then(response => response.json())
                        .then(data => {
                            // Check if the response contains results
                            if (data.results && data.results.length > 0) {
                                // Extract country and state from the first result
                                const components = data.results[0].address_components;

                                components.forEach(function (component) {
                                    if (component.types.includes('country')) {
                                        const country = component.long_name;
                                        $('.country').val(country);
                                    }

                                    if (component.types.includes('administrative_area_level_1')) {
                                        const state = component.long_name;
                                        $('.state').val(state);
                                    }
                                });
                            } else {
                                console.log("No results found for reverse geocoding");
                            }
                        })
                        .catch(error => {
                            console.error("Error during reverse geocoding request:", error);
                        });
                }
            });
        }
        initMap();
    </script>
