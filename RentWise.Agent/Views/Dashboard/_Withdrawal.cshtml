@using RentWise.Utility;
@model List<WithdrawalHistoryModel>
<div class="content content-7">
    <h1 class="h2">Withdrawals</h1>
    <hr />
    <div class="d-flex justify-content-evenly align-items-center my-3 flex-wrap">
        @{
            AgentRegistrationModel agent = ViewBag.Agent;
            double totalPaidCash = agent.PayWithCash;
            double totalPaidOnline = agent.PayWithCard;
            double totalPaid = totalPaidCash + totalPaidOnline;

            double totalOwingCash = agent.PayWithCash * 0.1;
            double totalOwingOnline = agent.PayWithCard * 0.1;
            double totalOwing = totalOwingCash + totalOwingOnline;

            double totalPending = totalPaidOnline -  totalOwing;
        }
        <p>Balance: ₵@totalPaid (Cash: ₵@totalPaidCash , Online: ₵@totalPaidOnline)</p>
        <p>Owing: ₵@totalOwing (Cash: ₵@totalOwingCash , Online: ₵@totalOwingOnline)</p>
        <p>Total Pending: ₵@totalPending </p>
        <div>
            @if(totalPending > 0)
            {
                <button class="btn btn-primary" onclick="openModal('withdrawal')">Withdrawal</button>
            }
            @if(totalPending < 0)
            {
                <button class="btn btn-primary" onclick="payNow()">Pay</button>
                <button class="btn btn-primary" onclick="openModal('withdrawal')">Withdrawal</button>
            }
        </div>
    </div>


    <div class="table-responsive">
    <table class="table">
        <thead class="table-primary">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Withdrawal Id</th>
                <th scope="col">Amount</th>
                <th scope="col">Account Number</th>
                <th scope="col">Bank Name</th>
                <th scope="col">Full Name</th>
                <th scope="col">Type</th>
                <th scope="col">Date</th>
                <th scope="col">Status</th>
            </tr>
        </thead>
        <tbody>
                @{
                    int serialNumber = 1;
                }

                @foreach (WithdrawalHistoryModel item in Model)
                {
                    <tr>
                        <th scope="row">@serialNumber</th>
                        <td>@item.Id</td>
                        <td>₵@Math.Abs(item.WithdrawalAmount)</td>
                        <td>@item.AccountDetails</td>
                        <td>@Lookup.Banks[item.LkpBankName]</td>
                        <td>@item.FullName</td>
                        @if (item.WithdrawalAmount < 0){
                            <td>Paid</td>
                        } else
                        {
                            <td>Withdraw</td>
                        }
                        <td>@item.CreatedAt.ToString()</td>
                        @if (item.Pending)
                        {
                            <td>Pending</td>
                        }
                        else
                        {
                            <td>Success</td>
                        }
                       
                    </tr>


                    serialNumber++;
                }
        </tbody>
    </table>
    </div>
</div>
@* Withdrawal Modal *@
<div class="modal fade" id="withdrawal" tabindex="-1" role="dialog" aria-labelledby="withdrawalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form class="modal-content" asp-controller="Dashboard" asp-action="Withdrawal">
            <div class="modal-header">
                <h5 class="modal-title" id="withdrawalLabel">Withdrawal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal('withdrawal')">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="price">
                    <div class="row">
                        <div class="col-12 mb-3">
                            <select class="form-select" aria-label="List of banks" name="lkpbank">
                                <option selected>Select bank</option>
                                @foreach (var bank in ViewBag.Banks)
                                {
                                    <option value="@bank.Key">@bank.Value</option>
                                }
                            </select>
                        </div>
                        <div class="col-6">
                            <label class="form-label">Full Name</label>
                            <div class="input-group mb-3">
                                <input class="form-control" type="text" placeholder="Enter your name" name="name">
                            </div>
                        </div>
                        <div class="col-6">
                            <label class="form-label">Account Number</label>
                            <div class="input-group mb-3" >
                                <input class="form-control" type="number" placeholder="Enter your account number" name="acc">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal('withdrawal')">Close</button>
                <button type="submit" class="btn btn-primary" onclick="withdrawal()">Withdrawal</button>
            </div>
        </form>
    </div>


</div>
<script>
    function payNow() {
        $.ajax({
            url: '/Dashboard/Pay',
            type: 'POST',
            data: {
            },
            success: function (data) {
                if (data.success) {
                        const message = JSON.parse(data.data)
                        const content = JSON.parse(message.Content)
                        location.href = content.data.checkoutUrl;
                        closeModal('paymentModal')
                }
                else {
                    Swal.fire('Error', 'Something went wrong', 'error');
                }
            },
            error: function (data) {
                Swal.fire('Error', 'Something went wrong', 'error');
            }
        })
    }
</script>