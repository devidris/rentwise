@model List<ProductModel>;
<link rel="stylesheet" href="~/css/controller/category/Index.css" asp-append-version="true" />
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCM2yIul54qUYlxHgjTmvp52goQdqPcUwA&libraries=places"></script>
<section class="row category bg-light">
    <div class="p-5 pb-0">
        <div class="px-md-5">
            <div>
                <div class="d-flex search">
                    <div class="search_input mb-2 ml-5">
                        <i class="bi bi-search text-muted"></i>
                        <input type="search" value="" placeholder="@ViewBag.CategoryName" class="search-input" />
                    </div>
                    <div class="search_input mb-2">

                        <i class="bi bi-geo-alt"></i>
                        <input type="search" value="" placeholder="Search" id="autocomplete-input" />
                        <button class="btn rouded-pill btn-info text-white search-button" onclick="search()">Search</button>
                    </div>
                </div>
            </div>
        <span class="d-block filter-text mt-2">Use the filters to refine your search</span>
            <div class="mt-4 sort">
                <h6>Sort By</h6>
                <select class="form-select w-auto" onchange="search()">
                    <option value="relevance">Relevance</option>
                    <option value="pricelth">Price: Low to High</option>
                    <option value="pricehtl">Price: High to Low</option>
                    <option value="rating">Rating</option>
                </select>
            </div>
        </div>

    </div>
    <div class="d-flex flex-wrap justify-content-evenly gap-5 mt-3 p-5 pt-0">
        @foreach (ProductModel category in Model)
        {
            <partial name="_DisplayPreview" for="@category" />
        }
    </div>
</section>
<script defer>
    let lat
    let lng
    $("document").ready(function () {
        const url = new URL(location.href)
        const param = new URLSearchParams(url.search)
        const sort = param.get('sort')
        const name = param.get('name')
        if(name) $(".search-input").val(name)
        if (sort) $(".form-select").val(sort)


    })
        function search (){
            const searchText = $(".search-input").val()
            const formSelect = $(".form-select").val()
     let link = `${location.href.split('?')[0]}?sort=${formSelect}&name=${searchText}`
            if (lat && lng) {
                link += `&lat=${lat}&lng=${lng}`
            }
            location.replace(link)
        }

    // Initialize the Places Autocomplete
    const autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete-input'));

    // Set the types to restrict the search to addresses only
    autocomplete.setTypes(['address']);

    // Listen for the event when a place is selected
    autocomplete.addListener('place_changed', function () {
        const place = autocomplete.getPlace();
        if (place.geometry && place.geometry.location) {
            lat = place.geometry.location.lat();
            lng = place.geometry.location.lng();
        }
    });
</script>